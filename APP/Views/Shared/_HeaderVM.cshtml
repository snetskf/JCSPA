@model HeaderViewModel

@Html.AntiForgeryToken()


<div class="container  mt-5 ">
    <p><h4 class="text-info ">Special Production Authority Form</h4></p>
    <table class="table table-active">
        <tr class="d-flex">

            <td class="col-md-2">
                @Html.LabelFor(m => m.header.Id, htmlAttributes: new { @class = "control-label" })
            </td>
            <td class="col-md-4">
                <div class="form-group w-75 ">
                    @if (Model.pagename == "Edit")
                    {
                        @Html.TextBoxFor(m => m.header.Id, htmlAttributes: new { @class = "control-label",@readonly="true" })
                    }
                    else
                    {
                        @Html.Label(@Model.header.Id.ToString())
                    }

                    @Html.ValidationMessageFor(m => m.header.Id, "", new { @class = "text-danger" })

                </div>
            </td>
            <td class="col-md-2">
                @Html.LabelFor(m => m.header.Creater, htmlAttributes: new { @class = "control-label" })
            </td>
            <td class="col-md-4">
                <div class="form-group w-75 ">

                    @Html.TextBoxFor(m => m.header.Creater, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.header.Creater, "", new { @class = "text-danger" })

                </div>
            </td>

        </tr>
        <tr class="d-flex">

            <td class="col-md-2">
                @Html.LabelFor(m => m.header.DateCreated, htmlAttributes: new { @class = "control-label" })
            </td>
            <td class="col-md-4">
                <div class="form-group w-75 ">
                    @*<div class="">@Html.TextBoxFor(m => m.header.DateCreated.Year, new { @class = "form-control bg-danger text-white w-25" })  </div>
                        <div class="">@Html.TextBoxFor(m => m.header.DateCreated.Month, new { @class = "form-control bg-white text-dark w-25" })  </div>*@

                    @Html.TextBoxFor(m => m.header.DateCreated, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.header.DateCreated, "", new { @class = "text-danger" })

                </div>
            </td>
            <td class="col-md-2">
                @Html.LabelFor(m => m.header.Status, htmlAttributes: new { @class = "control-label" })
            </td>
            <td class="col-md-4">
                <div class="form-group w-75 ">

                    @Html.TextBoxFor(m => m.header.Status, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.header.Status, "", new { @class = "text-danger" })

                </div>
            </td>

        </tr>

        <tr class="d-flex">

            <td class="col-md-2">
                @Html.LabelFor(m => m.header.CFTTeam, htmlAttributes: new { @class = "control-label" })
            </td>
            <td class="col-md-4">
                <div class="form-group w-75 ">

                    @Html.TextBoxFor(m => m.header.CFTTeam, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.header.CFTTeam, "", new { @class = "text-danger" })

                </div>
            </td>
            <td class="col-md-2">
                @Html.LabelFor(m => m.header.DateRequired, htmlAttributes: new { @class = "control-label" })
            </td>
            <td class="col-md-4">
                <div class="form-group w-75 ">
                    @if (Model.pagename == "Edit")
                    {@Html.TextBoxFor(m => m.header.DateRequired, new { @class = "form-control" })
                    }
                    else
                    {
                    @Html.EditorFor(m => m.header.DateRequired, new { @class = "form-control hidden" })
                    }
                    @Html.ValidationMessageFor(m => m.header.DateRequired, "", new { @class = "text-danger" })
                </div>
            </td>
        </tr>
        <tr class="d-flex">
            <td class="col-md-2">
                @Html.LabelFor(m => m.header.ModelandDescription, htmlAttributes: new { @class = "control-label" })
            </td>
            <td class="col-md-10">
                <div class="form-group w-75 ">

                    @Html.TextAreaFor(m => m.header.ModelandDescription, rows: 4, columns: 5, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.header.ModelandDescription, "", new { @class = "text-danger" })

                </div>
            </td>
        </tr>
        <tr class="d-flex">

            <td class="col-md-2">
                @Html.LabelFor(m => m.header.DeviationInstruction, htmlAttributes: new { @class = "control-label" })
            </td>
            <td class="col-md-10">
                <div class="form-group w-75 h-100 ">

                    @Html.TextAreaFor(m => m.header.DeviationInstruction, rows: 4, columns: 5, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.header.DeviationInstruction, "", new { @class = "text-danger" })

                </div>
            </td>
        </tr>
        <tr class="d-flex">

            <td class="col-md-2">
                @Html.LabelFor(m => m.header.QtyRequired, htmlAttributes: new { @class = "control-label" })
            </td>
            <td class="col-md-4">
                <div class="form-group w-75 ">

                    @Html.TextBoxFor(m => m.header.QtyRequired, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.header.QtyRequired, "", new { @class = "text-danger" })

                </div>
            </td>
            <td class="col-md-2">
                @Html.LabelFor(m => m.header.ModelDescription, htmlAttributes: new { @class = "control-label" })
            </td>
            <td class="col-md-4">
                <div class="form-group w-75 ">

                    @Html.TextBoxFor(m => m.header.ModelDescription, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.header.ModelDescription, "", new { @class = "text-danger" })

                </div>
            </td>

        </tr>
        <tr class="d-flex">

            <td class="col-md-2">
                @Html.LabelFor(m => m.header.BillofMaterials, htmlAttributes: new { @class = "control-label" })
            </td>
            <td class="col-md-4">
                <div class="form-group w-75 ">

                    @Html.TextBoxFor(m => m.header.BillofMaterials, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.header.BillofMaterials, "", new { @class = "text-danger" })

                </div>
            </td>
            <td class="col-md-2">
                @Html.LabelFor(m => m.header.SpecialAssemblyInstr, htmlAttributes: new { @class = "control-label" })
            </td>
            <td class="col-md-4">
                <div class="form-group w-75 ">

                    @Html.TextBoxFor(m => m.header.SpecialAssemblyInstr, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.header.SpecialAssemblyInstr, "", new { @class = "text-danger" })

                </div>
            </td>

        </tr>
        <tr class="d-flex">

            <td class="col-md-2">
                @Html.LabelFor(m => m.header.PackagingRequirements, htmlAttributes: new { @class = "control-label" })
            </td>
            <td class="col-md-4">
                <div class="form-group w-75 ">

                    @Html.TextBoxFor(m => m.header.PackagingRequirements, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.header.PackagingRequirements, "", new { @class = "text-danger" })

                </div>
            </td>
            <td class="col-md-2">
                @Html.LabelFor(m => m.header.TestRequirements, htmlAttributes: new { @class = "control-label" })
            </td>
            <td class="col-md-4">
                <div class="form-group w-75 ">

                    @Html.TextBoxFor(m => m.header.TestRequirements, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.header.TestRequirements, "", new { @class = "text-danger" })

                </div>
            </td>
        </tr>
    </table>
    <table class="table table-light">

        <tr class="d-flex">
            <td class="col-md-2">File Upload</td>
            <td class="col-md-6 dropleft"> <input type="file" name="fileuploaded" /> </td>
            <td class="col-md-4 text-warning">@Model.FileUploadMsg</td>
        </tr>

        @if (Model.Attachments != null)
        {
            @foreach (var item in Model.Attachments)
            {
                <tr>
                    <td>
                        <partial name="_Attachment" model="item" />
                    </td>
                </tr>
            }
        }
    </table>
</div>

@Html.ValidationSummary(true, "", new { @class = "text-danger" })

@if (Model.routing != null)
{<div class="text-primary font-weight-bold">Approval Routing</div>
    <table class="table table-active">
        <tr> <th>Type</th> <th>Email</th> <th>Status</th><th>TimeStamp</th></tr>
        @foreach (var item in Model.routing)
        {
            <partial name="_Routing" model="item" />



        }
    </table>
}

@if (Model.header.Id == 0)
{
    <div class="form-group">
        <div class="text-center">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
}
